---
layout: post
title:  "Best practices for successful data management"
date:   2025-07-23 07:12:00 +0900
categories: SW Engineering
---

# KEYS 원칙
"데이터의 잠재력을 여는 4개의 열쇠(KEYS)를 기억하세요."
이 구호는 데이터베이스의 핵심 요소인 '키(Key)'를 중심으로, 명확하고 구조화된 데이터베이스를 만들기 위한 4가지 핵심 활동을 강조합니다.

 * Keep Naming Consistent (일관된 명명 규칙 유지): 테이블, 컬럼, 키 이름을 예측 가능하고 일관된 규칙(snake_case 등)으로 명명하여 가독성을 높입니다.
 * Establish Foreign Keys (외래 키 관계 설정): 테이블 간의 관계를 외래 키로 명시적으로 정의하여 데이터 무결성을 보장하고, 관계를 자체적으로 문서화합니다.
 * Yield Business Context (비즈니스 키로 문맥 제공): 자동 증가하는 id(대리 키)와 더불어, 고객번호나 상품코드 같은 비즈니스 의미가 있는 자연 키에 UNIQUE 제약 조건을 설정하여 분석 편의성을 제공합니다. 
 * Specify in a Dictionary (데이터 사전에 명시): 눈에 보이지 않는 비즈니스 로직, 컬럼의 의미, 계산 방식 등을 데이터 사전에 상세히 기록하여 누구나 데이터를 올바르게 이해하고 활용할 수 있도록 합니다.

# TRUST 원칙
"인간과 AI가 신뢰(TRUST)하는 데이터를 만듭시다."
데이터의 최종 목표인 '신뢰'를 구축하는 데 초점을 맞춥니다. 개발팀의 노력이 어떻게 데이터 신뢰성으로 이어지는지를 강조합니다.

 * Tables Related Explicitly (명시적인 테이블 관계): 모든 관계는 외래 키로 명확하게 정의되어야 합니다. 추측이 아닌, 보장된 관계를 만듭니다.
 * Reveal with Business Keys (비즈니스 키로 의미 공개): 의미 없는 id 값만으로는 데이터를 신뢰하기 어렵습니다. 비즈니스 키를 함께 제공하여 데이터의 의미를 명확히 합니다.
 * Unify Naming Conventions (통일된 명명 규칙): 잘 정돈된 명명 규칙은 스키마를 이해하는 시간을 단축시키고, 잘못된 해석으로 인한 분석 오류를 방지하는 첫걸음입니다.
 * Specify in a Data Dictionary (데이터 사전 명시): "이 컬럼은 무슨 뜻인가요?" 라는 질문이 사라지도록, 모든 정의와 규칙을 데이터 사전에 투명하게 기록하여 공유합니다.
 * Test for Data Integrity (데이터 무결성 보장): 외래 키 제약 등을 통해 고아 데이터(Orphaned data)가 발생하지 않도록 시스템적으로 데이터 무결성을 강제합니다.

# CODE 원칙
"깔끔한 데이터베이스 코드(CODE)를 작성합시다."좋은 데이터베이스 설계가 곧 좋은 코딩 실천의 일부입니다.

 * Connect with Foreign Keys (외래 키로 연결하세요): 테이블들을 외래 키로 연결하여 관계의 웹을 명확하게 구축합니다.
 * Organize with Naming Rules (명명 규칙으로 정리하세요): 예측 가능한 명명 규칙을 적용하여 코드를 짜듯 스키마를 논리적으로 구성합니다.
 * Define in a Dictionary (데이터 사전에 정의하세요): 코드에 주석을 달듯, 모든 테이블과 컬럼의 역할과 의미를 데이터 사전에 명확히 정의합니다.
 * Expose Business Keys (비즈니스 키를 노출하세요): id 뒤에 숨겨진 비즈니스 맥락을 파악할 수 있도록, 의미 있는 비즈니스 식별자를 함께 노출하고 사용할 수 있게 합니다.